angular.module("mwFormViewer",["ngSanitize","ngMaterial","ng-sortable","pascalprecht.translate"]);
angular.module("mwFormViewer").run(["$templateCache",function(e){e.put("mw-form-confirmation-page.html",'<div class=mw-form-confirmation-page><div class="mw-confirmation-message md-display-4" ng-if="ctrl.submitStatus==\'SUCCESS\'"><span ng-if=ctrl.confirmationMessage>{{::ctrl.print(ctrl.confirmationMessage)}}</span> <span ng-if=!ctrl.confirmationMessage translate=mwForm.confirmationPage.defaultMessage>Twoja odpowiedź została zapisana</span></div><div class=mw-error-message ng-if="ctrl.submitStatus==\'ERROR\'"><span translate=mwForm.confirmationPage.errorMessage>Bład. Twoja odpowiedź nie została zapisana.</span></div><div class=mw-pending-message ng-if="ctrl.submitStatus==\'IN_PROGRESS\'"><span translate=mwForm.confirmationPage.pendingMessage>Zapisywanie odpowiedzi w trakcie.</span></div></div>'),e.put("mw-form-question.html",'<div class=mw-form-question><p class=mw-question-text>{{::ctrl.print(ctrl.question.text)}} <span ng-if=ctrl.question.required>*</span></p><div class=mw-question-answers ng-switch=ctrl.question.type><div ng-switch-when=text><md-input-container class=md-block><label>{{\'mwForm.question.preview.text\'|translate}}</label> <input type=text ng-model=ctrl.questionResponse.answer ng-required=ctrl.question.required ng-readonly=ctrl.readOnly></md-input-container></div><div ng-switch-when=textarea><md-input-container class=md-block><label>{{\'mwForm.question.preview.textarea\'|translate}}</label> <textarea ng-model=ctrl.questionResponse.answer ng-required=ctrl.question.required ng-readonly=ctrl.readOnly></textarea></md-input-container></div><div ng-switch-when=radio><md-radio-group ng-model=ctrl.questionResponse.selectedAnswer ng-change=ctrl.selectedAnswerChanged()><md-radio-button ng-repeat="answer in ctrl.question.offeredAnswers" ng-value=answer.id name=answer-for-question-{{ctrl.question.id}} ng-required="ctrl.question.required && !ctrl.isOtherAnswer" ng-disabled=ctrl.readOnly>{{::ctrl.print(answer.value)}}</md-radio-button></md-radio-group><div layout=row><md-radio-group ng-model=ctrl.isOtherAnswer ng-change=ctrl.otherAnswerRadioChanged() ng-if=ctrl.question.otherAnswer><md-radio-button ng-value=true name=other-answer-for-question-{{ctrl.question.id}} ng-disabled=ctrl.readOnly><span translate=mwForm.question.preview.otherAnswer>Inna</span></md-radio-button></md-radio-group><md-input-container ng-if=ctrl.question.otherAnswer md-no-float><input type=text name=other-answer-for-question-{{ctrl.question.id}} ng-model=ctrl.questionResponse.other ng-disabled="!ctrl.isOtherAnswer || ctrl.readOnly" ng-required=ctrl.isOtherAnswer md-autofocus></md-input-container></div></div><div ng-switch-when=checkbox><md-checkbox ng-repeat="answer in ::ctrl.question.offeredAnswers" name=answer-for-question-{{ctrl.question.id}} ng-checked="ctrl.questionResponse.selectedAnswers.indexOf(answer.id) != -1" ng-click=ctrl.toggleSelectedAnswer(answer) ng-disabled=ctrl.readOnly>{{::ctrl.print(answer.value)}}</md-checkbox><md-checkbox ng-if=ctrl.question.otherAnswer name=answer-for-question-{{ctrl.question.id}} ng-model=ctrl.isOtherAnswer ng-change=ctrl.otherAnswerCheckboxChanged() ng-disabled=ctrl.readOnly><span translate=mwForm.question.preview.otherAnswer>Inna</span></md-checkbox><md-input-container ng-if=ctrl.question.otherAnswer md-no-float><input type=text ng-model=ctrl.questionResponse.other name=other-answer-for-question-{{ctrl.question.id}} ng-disabled="!ctrl.isOtherAnswer || ctrl.readOnly" ng-required=ctrl.isOtherAnswer md-autofocus></md-input-container><input type=hidden ng-model=ctrl.selectedAnswer ng-required="ctrl.question.required &&!ctrl.isOtherAnswer"></div><div ng-switch-when=grid><div class=table-responsive><table class="table table-condensed table-striped" border=0 cellpadding=5 cellspacing=0><thead><tr><td></td><td ng-repeat="col in ::ctrl.question.grid.cols"><label>{{::ctrl.print(col.label)}}</label></td></tr></thead><tbody><tr ng-repeat="row in ::ctrl.question.grid.rows"><td>{{::ctrl.print(row.label)}}</td><td ng-repeat="col in ::ctrl.question.grid.cols"><input type=radio ng-model=ctrl.questionResponse[row.id] ng-value=col.id name=answer-for-question-{{row.id}} ng-required=ctrl.question.required ng-disabled=ctrl.readOnly></td></tr></tbody></table></div></div><div ng-switch-when=division class=division-list ng-form=ctrl.divisionForm><div style="margin-bottom: 5px" ng-repeat="item in ctrl.question.divisionList"><div class=form-group><label>{{::ctrl.print(item.value)}}</label> <input type=number ng-model=ctrl.questionResponse[item.id] min=0 max={{ctrl.question.quantity}} required style="width: 80px" ng-change=ctrl.computeDivisionSum() ng-readonly=ctrl.readOnly> <span>{{::ctrl.print(ctrl.question.unit)}}</span></div></div><div style="margin-bottom: 5px"><div class=form-group><label translate=mwForm.question.division.assignedSumLabel>Przydzielono</label> <input type=number class="form-control strict-validation" ng-model=ctrl.divisionSum min={{ctrl.question.quantity}} max={{ctrl.question.quantity}} style="width: 80px" readonly> <span>{{ctrl.question.unit}} <span translate=mwForm.question.division.fromRequiredLabel>z wymaganych</span> <strong>{{ctrl.question.quantity}}</strong> {{ctrl.question.unit}} <i ng-show=ctrl.divisionForm.$valid class="fa fa-check" style=color:#008000;></i></span></div></div></div><mw-priority-list ng-switch-when=priority question-response=ctrl.questionResponse question=ctrl.question read-only=ctrl.readOnly></mw-priority-list><div ng-switch-when=number><md-input-container class=md-block><input min={{ctrl.question.min}} max={{ctrl.question.max}} type=number ng-model=ctrl.questionResponse.answer ng-required=ctrl.question.required ng-readonly=ctrl.readOnly></md-input-container></div><div ng-switch-when=date><md-datepicker ng-model=ctrl.questionResponse.answer ng-required=ctrl.question.required ng-readonly=ctrl.readOnly></md-datepicker></div><div ng-switch-when=datetime><md-datepicker ng-model=ctrl.questionResponse.answer ng-required=ctrl.question.required ng-readonly=ctrl.readOnly></md-datepicker></div><div ng-switch-when=time><md-datepicker ng-model=ctrl.questionResponse.answer ng-required=ctrl.question.required ng-readonly=ctrl.readOnly></md-datepicker></div><div ng-switch-when=email><md-input-container class=md-block><input type=email ng-model=ctrl.questionResponse.answer ng-required=ctrl.question.required ng-readonly=ctrl.readOnly></md-input-container></div><div ng-switch-when=range class=mw-range ng-init="ctrl.questionResponse.answer = ctrl.question.min"><md-slider min={{ctrl.question.min}} max={{ctrl.question.max}} type=range ng-model=ctrl.questionResponse.answer ng-required=ctrl.question.required ng-readonly=ctrl.readOnly></md-slider><strong class=mw-range-value-label>{{ctrl.questionResponse.answer}}</strong></div><div ng-switch-when=url><md-input-container class=md-block><input type=url ng-model=ctrl.questionResponse.answer ng-required=ctrl.question.required ng-readonly=ctrl.readOnly></md-input-container></div></div></div>'),e.put("mw-form-response.html",'<div class=mw-form-response><p class=mw-response-text>{{::ctrl.print(ctrl.response.text)}} <span ng-if=ctrl.response.required>*</span></p><div class=mw-response-answers ng-switch=ctrl.response.type><div ng-switch-when=radio ng-repeat="m in ctrl.multiple">{{m}}<md-radio-group ng-model=ctrl.responseResponse[m].selectedAnswer ng-change=ctrl.selectedAnswerChanged()><md-radio-button ng-repeat="answer in ctrl.response.responseAnswers" ng-value=answer.id name=answer-for-response-{{ctrl.response.id}}-{{$index}} ng-required="ctrl.response.required && !ctrl.isOtherAnswer" ng-disabled=ctrl.readOnly>{{::ctrl.print(answer.value)}}</md-radio-button></md-radio-group><div layout=row><md-radio-group ng-model=ctrl.isOtherAnswer ng-change=ctrl.otherAnswerRadioChanged() ng-if=ctrl.response.otherAnswer><md-radio-button ng-value=true name=other-answer-for-response-{{ctrl.response.id}}-{{$index}} ng-disabled=ctrl.readOnly><span translate=mwForm.response.preview.otherAnswer>Inna</span></md-radio-button></md-radio-group><md-input-container ng-if=ctrl.response.otherAnswer md-no-float><input type=text name=other-answer-for-response-{{ctrl.response.id}}-{{$index}} ng-model=ctrl.responseResponse[m].other ng-disabled="!ctrl.isOtherAnswer || ctrl.readOnly" ng-required=ctrl.isOtherAnswer md-autofocus></md-input-container></div></div><div ng-switch-when=number ng-repeat="m in ctrl.multiple" layout=row><md-input-container><label>{{m}}</label> <input type=number ng-model=ctrl.responseResponse[m].answer ng-required=ctrl.response.required ng-readonly=ctrl.readOnly></md-input-container><i class="fa fa-close" flex=nogrow ng-click=ctrl.removeResponse(m)></i></div></div></div>'),e.put("mw-form-viewer-content.html",'<div class=mw-form-viewer-content><md-card ng-if="!ctrl.currentPage && !ctrl.formSubmitted"><md-card-title><md-card-title-text><span class=md-headline>{{ctrl.formData.name}}</span></md-card-title-text></md-card-title><md-card-content><p>{{ctrl.formData.description}}</p></md-card-content><md-card-actions layout=row layout-align="end center"><md-button ng-click=ctrl.beginResponse() translate=mwForm.buttons.begin>Rozpocznij</md-button></md-card-actions></md-card><md-card ng-if=ctrl.currentPage><md-card-title><md-card-title-text ng-if="ctrl.currentPage.namedPage && ctrl.currentPage.name"><span class=md-headline>{{ctrl.currentPage.name}}</span> <span class=md-subhead>{{ctrl.formData.name}}</span></md-card-title-text><md-card-title-text ng-if="!(ctrl.currentPage.namedPage && ctrl.currentPage.name)"><span class=md-subhead>{{ctrl.formData.name}}</span></md-card-title-text></md-card-title><md-card-content><div class=mw-page-element ng-repeat="pageElement in ctrl.currentPage.elements" ng-switch=pageElement.type><mw-form-question ng-switch-when=question question=pageElement.question question-response=ctrl.responseData[pageElement.question.id] read-only=ctrl.readOnly on-response-changed=ctrl.onResponseChanged(pageElement)></mw-form-question><mw-form-response ng-switch-when=response response=pageElement.response response-response=ctrl.responseData[pageElement.response.id] read-only=ctrl.readOnly on-response-changed=ctrl.onResponseChanged(pageElement) multiple=ctrl.multiple></mw-form-response><div class=image-element ng-switch-when=image><figure ng-class="\'align-\'+pageElement.image.align"><img ng-src={{pageElement.image.src}} ng-attr-alt=pageElement.image.caption><figcaption ng-if=pageElement.image.caption>{{pageElement.image.caption}}</figcaption></figure></div><div ng-switch-when=paragraph><p ng-bind-html=::ctrl.print(pageElement.paragraph.html)></p></div></div></md-card-content><md-card-actions layout=row layout-align="end center"><md-button ng-if=ctrl.buttons.prevPage.visible ng-click=ctrl.goToPrevPage()><i class="fa fa-chevron-left"></i> <span translate=mwForm.buttons.back>Wstecz</span></md-button><md-button ng-disabled=ctrl.form.$invalid ng-if=ctrl.buttons.nextPage.visible ng-click=ctrl.goToNextPage()><span translate=mwForm.buttons.next>Dalej</span> <i class="fa fa-chevron-right"></i></md-button><md-button ng-disabled=ctrl.form.$invalid ng-if="ctrl.buttons.submitForm.visible && !ctrl.readOnly" ng-click=ctrl.submitForm()><span translate=mwForm.buttons.submit>Submit</span></md-button></md-card-actions></md-card><md-card ng-if=ctrl.formSubmitted><md-card-content><mw-form-confirmation-page confirmation-message=ctrl.formData.confirmationMessage submit-status=ctrl.submitStatus></mw-form-confirmation-page></md-card-content></md-card></div>'),e.put("mw-form-viewer.html","<div class=mw-form-viewer><form ng-if=!ctrl.options.nestedForm name=ctrl.form role=form novalidate ng-include=\"'mw-form-viewer-content.html'\"></form><div ng-if=ctrl.options.nestedForm ng-form=ctrl.form ng-include=\"'mw-form-viewer-content.html'\"></div></div>"),e.put("mw-priority-list.html",'<div class=mw-priority-list><table><thead><tr><th translate=mwForm.question.priority.sorted>Sorted</th><th translate=mwForm.question.priority.available>Available</th></tr></thead><tbody><tr><td class=mw-ordered-items ng-sortable=ctrl.orderedConfig ng-model=ctrl.questionResponse.priorityList><div class=mw-item ng-repeat="item in ctrl.questionResponse.priorityList"><strong>{{$index+1}}.</strong> {{::ctrl.print(ctrl.idToItem[item.id].value)}}</div></td><td class=mw-available-items ng-sortable=ctrl.availableConfig ng-model=ctrl.availableItems><div class=mw-item ng-repeat="item in ctrl.availableItems">{{::ctrl.print(ctrl.idToItem[item.id].value)}}</div></td></tr></tbody></table><input type=hidden ng-model=ctrl.allItemsOrdered ng-required=ctrl.question.required></div>')}]);
angular.module("mwFormViewer").directive("mwPriorityList",function(){return{replace:!0,restrict:"AE",require:"^mwFormQuestion",scope:{question:"=",questionResponse:"=",readOnly:"=?",options:"=?"},templateUrl:"mw-priority-list.html",controllerAs:"ctrl",bindToController:!0,controller:function(){function i(i){if(i)for(var t=0;t<i.length;t++){var e=i[t];e.priority=t+1}}function t(i){i.sort(function(i,t){return i.priority-t.priority})}var e=this;e.questionResponse.priorityList||(e.questionResponse.priorityList=[]),e.idToItem={},t(e.questionResponse.priorityList),e.availableItems=[],e.question.priorityList.forEach(function(i){e.idToItem[i.id]=i;var t=e.questionResponse.priorityList.some(function(t){return i.id==t.id});t||e.availableItems.push({priority:null,id:i.id})}),e.allItemsOrdered=0==e.availableItems.length?!0:null;var r={disabled:e.readOnly,ghostClass:"beingDragged"};e.orderedConfig=angular.extend({},r,{group:{name:"A",pull:!1,put:["B"]},onEnd:function(t,r){i(e.questionResponse.priorityList)}}),e.availableConfig=angular.extend({},r,{sort:!1,group:{name:"B",pull:["A"],put:!1},onEnd:function(t,r){i(e.questionResponse.priorityList),e.allItemsOrdered=0==e.availableItems.length?!0:null}})},link:function(i,t,e,r){var n=i.ctrl;n.print=r.print}}});
angular.module("mwFormViewer").directive("mwFormViewer",function(){return{replace:!0,restrict:"AE",scope:{formData:"=",responseData:"=",multiple:"=?",templateData:"=?",readOnly:"=?",options:"=?",formStatus:"=?",onSubmit:"&",api:"=?"},templateUrl:"mw-form-viewer.html",controllerAs:"ctrl",bindToController:!0,controller:["$timeout","$interpolate",function(e,t){function a(){n.formData.pages.sort(function(e,t){return e.number-t.number})}var n=this;n.defaultOptions={nestedForm:!1,autoStart:!1},n.options=angular.extend({},n.defaultOptions,n.options),n.submitStatus="NOT_SUBMITTED",n.formSubmitted=!1,a(),n.pageIdToPage={},n.formData.pages.forEach(function(e){n.pageIdToPage[e.id]=e}),n.buttons={prevPage:{visible:!1,disabled:!1},nextPage:{visible:!1,disabled:!1},submitForm:{visible:!1,disabled:!1}},n.submitForm=function(){n.formSubmitted=!0,n.submitStatus="IN_PROGRESS",n.setCurrentPage(null);var e=n.onSubmit();e.then(function(){n.submitStatus="SUCCESS"})["catch"](function(){n.submitStatus="ERROR"})},n.setCurrentPage=function(e){return n.currentPage=e,e?(n.setDefaultNextPage(),void n.initResponsesForCurrentPage()):(n.buttons.submitForm.visible=!1,n.buttons.prevPage.visible=!1,void(n.buttons.nextPage.visible=!1))},n.setDefaultNextPage=function(){var e=n.formData.pages.indexOf(n.currentPage);if(n.currentPage.isFirst=0===e,n.currentPage.isLast=e==n.formData.pages.length-1,n.buttons.submitForm.visible=n.currentPage.isLast,n.buttons.prevPage.visible=!n.currentPage.isFirst,n.buttons.nextPage.visible=!n.currentPage.isLast,n.currentPage.isLast?n.nextPage=null:n.nextPage=n.formData.pages[e+1],n.currentPage.pageFlow){var t=!1;n.currentPage.pageFlow.formSubmit?(n.nextPage=null,t=!0):n.currentPage.pageFlow.page?(n.nextPage=n.pageIdToPage[n.currentPage.pageFlow.page.id],n.buttons.nextPage.visible=!0):n.currentPage.isLast&&(n.nextPage=null,t=!0),n.buttons.submitForm.visible=t,n.buttons.nextPage.visible=!t}},n.initResponsesForCurrentPage=function(){n.currentPage.elements.forEach(function(e){var t=e.question;t&&!n.responseData[t.id]&&(n.responseData[t.id]={})}),n.currentPage.elements.forEach(function(e){var t=e.response;t&&!n.responseData[t.id]&&(n.responseData[t.id]={})})},n.beginResponse=function(){n.formData.pages.length>0&&n.setCurrentPage(n.formData.pages[0])},n.resetPages=function(){n.prevPages=[],n.currentPage=null,n.nextPage=null,n.formSubmitted=!1,n.options.autoStart&&n.beginResponse()},n.resetPages(),n.goToPrevPage=function(){var e=n.prevPages.pop();n.setCurrentPage(e),n.updateNextPageBasedOnAllAnswers()},n.goToNextPage=function(){n.prevPages.push(n.currentPage),n.updateNextPageBasedOnAllAnswers(),n.setCurrentPage(n.nextPage)},n.updateNextPageBasedOnAllAnswers=function(){n.currentPage.elements.forEach(function(e){n.updateNextPageBasedOnPageElementAnswers(e)}),n.buttons.submitForm.visible=!n.nextPage,n.buttons.nextPage.visible=!!n.nextPage},n.updateNextPageBasedOnPageElementAnswers=function(e){var t=e.question;t&&t.pageFlowModifier&&t.offeredAnswers.forEach(function(e){e.pageFlow&&n.responseData[t.id].selectedAnswer==e.id&&(e.pageFlow.formSubmit?n.nextPage=null:e.pageFlow.page&&(n.nextPage=n.pageIdToPage[e.pageFlow.page.id]))});var a=e.response;a&&a.pageFlowModifier&&a.responseAnswers.forEach(function(e){e.pageFlow&&n.responseData[a.id].selectedAnswer==e.id&&(e.pageFlow.formSubmit?n.nextPage=null:e.pageFlow.page&&(n.nextPage=n.pageIdToPage[e.pageFlow.page.id]))})},n.onResponseChanged=function(e){n.setDefaultNextPage(),n.updateNextPageBasedOnAllAnswers()},n.api&&(n.api.reset=function(){for(var t in n.responseData)n.responseData.hasOwnProperty(t)&&delete n.responseData[t];n.buttons.submitForm.visible=!1,n.buttons.prevPage.visible=!1,n.buttons.nextPage.visible=!1,n.currentPage=null,e(n.resetPages,0)}),n.print=function(e){return n.templateData?t(e)(n.templateData):e}}],link:function(e,t,a){var n=e.ctrl;n.formStatus&&(n.formStatus.form=n.form)}}});
angular.module("mwFormViewer").factory("FormResponseId",function(){var e=0;return{next:function(){return++e}}}).directive("mwFormResponse",function(){return{replace:!0,restrict:"AE",require:"^mwFormViewer",scope:{response:"=",multiple:"=",responseResponse:"=",readOnly:"=?",options:"=?",onResponseChanged:"&?"},templateUrl:"mw-form-response.html",controllerAs:"ctrl",bindToController:!0,controller:["$timeout","FormResponseId",function(e,s){var n=this;n.id=s.next(),n.multiple||(n.multiple=[1]),"radio"==n.response.type?(n.responseResponse.selectedAnswer||(n.responseResponse.selectedAnswer=null),n.responseResponse.other&&(n.isOtherAnswer=!0)):"checkbox"==n.response.type&&(n.responseResponse.selectedAnswers&&n.responseResponse.selectedAnswers.length?n.selectedAnswer=!0:n.responseResponse.selectedAnswers=[],n.responseResponse.other&&(n.isOtherAnswer=!0)),n.isAnswerSelected=!1,n.selectedAnswerChanged=function(){delete n.responseResponse.other,n.isOtherAnswer=!1,n.answerChanged()},n.otherAnswerRadioChanged=function(){n.isOtherAnswer&&(n.responseResponse.selectedAnswer=null),n.answerChanged()},n.otherAnswerCheckboxChanged=function(){n.isOtherAnswer||delete n.responseResponse.other,n.selectedAnswer=n.responseResponse.selectedAnswers.length||n.isOtherAnswer?!0:null,n.answerChanged()},n.removeResponse=function(e){delete n.responseResponse[e]},n.toggleSelectedAnswer=function(e){-1===n.responseResponse.selectedAnswers.indexOf(e.id)?n.responseResponse.selectedAnswers.push(e.id):n.responseResponse.selectedAnswers.splice(n.responseResponse.selectedAnswers.indexOf(e.id),1),n.selectedAnswer=n.responseResponse.selectedAnswers.length||n.isOtherAnswer?!0:null,n.answerChanged()},n.answerChanged=function(){n.onResponseChanged&&n.onResponseChanged()}}],link:function(e,s,n,r){var o=e.ctrl;o.print=r.print}}});
angular.module("mwFormViewer").factory("FormQuestionId",function(){var e=0;return{next:function(){return++e}}}).directive("mwFormQuestion",function(){return{replace:!0,restrict:"AE",require:"^mwFormViewer",scope:{question:"=",questionResponse:"=",readOnly:"=?",options:"=?",onResponseChanged:"&?"},templateUrl:"mw-form-question.html",controllerAs:"ctrl",bindToController:!0,controller:["$timeout","FormQuestionId",function(e,s){var n=this;n.id=s.next(),"radio"==n.question.type?(n.questionResponse.selectedAnswer||(n.questionResponse.selectedAnswer=null),n.questionResponse.other&&(n.isOtherAnswer=!0)):"checkbox"==n.question.type?(n.questionResponse.selectedAnswers&&n.questionResponse.selectedAnswers.length?n.selectedAnswer=!0:n.questionResponse.selectedAnswers=[],n.questionResponse.other&&(n.isOtherAnswer=!0)):"grid"==n.question.type||"division"==n.question.type&&(n.computeDivisionSum=function(){n.divisionSum=0,n.question.divisionList.forEach(function(e){0==n.questionResponse[e.id]||n.questionResponse[e.id]?n.divisionSum+=n.questionResponse[e.id]:(n.questionResponse[e.id]=null,n.divisionSum+=0)})},n.computeDivisionSum()),n.isAnswerSelected=!1,n.selectedAnswerChanged=function(){delete n.questionResponse.other,n.isOtherAnswer=!1,n.answerChanged()},n.otherAnswerRadioChanged=function(){n.isOtherAnswer&&(n.questionResponse.selectedAnswer=null),n.answerChanged()},n.otherAnswerCheckboxChanged=function(){n.isOtherAnswer||delete n.questionResponse.other,n.selectedAnswer=n.questionResponse.selectedAnswers.length||n.isOtherAnswer?!0:null,n.answerChanged()},n.toggleSelectedAnswer=function(e){-1===n.questionResponse.selectedAnswers.indexOf(e.id)?n.questionResponse.selectedAnswers.push(e.id):n.questionResponse.selectedAnswers.splice(n.questionResponse.selectedAnswers.indexOf(e.id),1),n.selectedAnswer=n.questionResponse.selectedAnswers.length||n.isOtherAnswer?!0:null,n.answerChanged()},n.answerChanged=function(){n.onResponseChanged&&n.onResponseChanged()}}],link:function(e,s,n,o){var t=e.ctrl;t.print=o.print}}});
angular.module("mwFormViewer").directive("mwFormConfirmationPage",function(){return{replace:!0,restrict:"AE",require:"^mwFormViewer",scope:{submitStatus:"=",confirmationMessage:"=",readOnly:"=?"},templateUrl:"mw-form-confirmation-page.html",controllerAs:"ctrl",bindToController:!0,controller:function(){},link:function(r,e,t,n){var o=r.ctrl;o.print=n.print}}});